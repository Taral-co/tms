name: Build and Publish TMS Backend Docker Image

on:
  push:
    branches: [ "main", "master" ]
    tags: [ "v*" ]
    paths:
      - 'app/backend/**'
      - '.github/workflows/backend-docker.yml'
  pull_request:
    branches: [ "main", "master" ]
    paths:
      - 'app/backend/**'
      - '.github/workflows/backend-docker.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/tms-backend

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('app/backend/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Test Go build
      run: |
        cd app/backend
        go mod tidy
        go build -o tms-backend ./cmd/api/main.go

    - name: Run Go tests
      run: |
        cd app/backend
        go test ./... -v

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GHCR
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: ./app/backend
        file: ./app/backend/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate build summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Image**: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Tags**: ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Digest**: ${{ steps.build.outputs.digest }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Platform**: linux/amd64" >> $GITHUB_STEP_SUMMARY

    # Optional: Add deployment step if you have deployment secrets configured
    # - name: Deploy to production
    #   if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    #   run: |
    #     curl --location 'https://your-deployment-endpoint.com/deploy' \
    #       --header 'X-Secret-Key: ${{ secrets.DEPLOYMENT_SECRET_KEY }}' \
    #       --form 'tag_id="${{ github.sha }}"' \
    #       --form 'image="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"'
